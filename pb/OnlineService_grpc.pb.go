// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.27.3
// source: proto/OnlineService.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	OnlineService_UpdateOnlineUser_FullMethodName = "/myservice.OnlineService/UpdateOnlineUser"
	OnlineService_GetOnlineUser_FullMethodName    = "/myservice.OnlineService/GetOnlineUser"
	OnlineService_OutlineUser_FullMethodName      = "/myservice.OnlineService/OutlineUser"
)

// OnlineServiceClient is the client API for OnlineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OnlineServiceClient interface {
	// 上线和心跳
	UpdateOnlineUser(ctx context.Context, in *UpdateOnlineUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 获取用户
	GetOnlineUser(ctx context.Context, in *GetOnlineUserRequest, opts ...grpc.CallOption) (*GetOnlineUserResp, error)
	// 下线
	OutlineUser(ctx context.Context, in *GetOnlineUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onlineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnlineServiceClient(cc grpc.ClientConnInterface) OnlineServiceClient {
	return &onlineServiceClient{cc}
}

func (c *onlineServiceClient) UpdateOnlineUser(ctx context.Context, in *UpdateOnlineUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, OnlineService_UpdateOnlineUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineServiceClient) GetOnlineUser(ctx context.Context, in *GetOnlineUserRequest, opts ...grpc.CallOption) (*GetOnlineUserResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetOnlineUserResp)
	err := c.cc.Invoke(ctx, OnlineService_GetOnlineUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineServiceClient) OutlineUser(ctx context.Context, in *GetOnlineUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, OnlineService_OutlineUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnlineServiceServer is the server API for OnlineService service.
// All implementations must embed UnimplementedOnlineServiceServer
// for forward compatibility.
type OnlineServiceServer interface {
	// 上线和心跳
	UpdateOnlineUser(context.Context, *UpdateOnlineUserRequest) (*emptypb.Empty, error)
	// 获取用户
	GetOnlineUser(context.Context, *GetOnlineUserRequest) (*GetOnlineUserResp, error)
	// 下线
	OutlineUser(context.Context, *GetOnlineUserRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedOnlineServiceServer()
}

// UnimplementedOnlineServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedOnlineServiceServer struct{}

func (UnimplementedOnlineServiceServer) UpdateOnlineUser(context.Context, *UpdateOnlineUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOnlineUser not implemented")
}
func (UnimplementedOnlineServiceServer) GetOnlineUser(context.Context, *GetOnlineUserRequest) (*GetOnlineUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineUser not implemented")
}
func (UnimplementedOnlineServiceServer) OutlineUser(context.Context, *GetOnlineUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OutlineUser not implemented")
}
func (UnimplementedOnlineServiceServer) mustEmbedUnimplementedOnlineServiceServer() {}
func (UnimplementedOnlineServiceServer) testEmbeddedByValue()                       {}

// UnsafeOnlineServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OnlineServiceServer will
// result in compilation errors.
type UnsafeOnlineServiceServer interface {
	mustEmbedUnimplementedOnlineServiceServer()
}

func RegisterOnlineServiceServer(s grpc.ServiceRegistrar, srv OnlineServiceServer) {
	// If the following call pancis, it indicates UnimplementedOnlineServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&OnlineService_ServiceDesc, srv)
}

func _OnlineService_UpdateOnlineUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOnlineUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServiceServer).UpdateOnlineUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineService_UpdateOnlineUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServiceServer).UpdateOnlineUser(ctx, req.(*UpdateOnlineUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineService_GetOnlineUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServiceServer).GetOnlineUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineService_GetOnlineUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServiceServer).GetOnlineUser(ctx, req.(*GetOnlineUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineService_OutlineUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServiceServer).OutlineUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineService_OutlineUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServiceServer).OutlineUser(ctx, req.(*GetOnlineUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OnlineService_ServiceDesc is the grpc.ServiceDesc for OnlineService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OnlineService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "myservice.OnlineService",
	HandlerType: (*OnlineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateOnlineUser",
			Handler:    _OnlineService_UpdateOnlineUser_Handler,
		},
		{
			MethodName: "GetOnlineUser",
			Handler:    _OnlineService_GetOnlineUser_Handler,
		},
		{
			MethodName: "OutlineUser",
			Handler:    _OnlineService_OutlineUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/OnlineService.proto",
}
