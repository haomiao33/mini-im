// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.3
// source: proto/MsgService.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 单聊 发送消息
type ImMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// 0=单聊；1=一般群； 2=机器人
	ChatType int32 `protobuf:"varint,2,opt,name=chatType,proto3" json:"chatType,omitempty"`
	// 消息类型； 1=文本；2=图片；3=视频；4=文件；5=通话
	MsgType int32 `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	// 发送者id
	FromId int64 `protobuf:"varint,4,opt,name=fromId,proto3" json:"fromId,omitempty"`
	// 接收者id
	ToId int64 `protobuf:"varint,5,opt,name=toId,proto3" json:"toId,omitempty"`
	// 消息内容
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	// 消息客户端时间戳
	Ts int64 `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *ImMsgRequest) Reset() {
	*x = ImMsgRequest{}
	mi := &file_proto_MsgService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMsgRequest) ProtoMessage() {}

func (x *ImMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_MsgService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMsgRequest.ProtoReflect.Descriptor instead.
func (*ImMsgRequest) Descriptor() ([]byte, []int) {
	return file_proto_MsgService_proto_rawDescGZIP(), []int{0}
}

func (x *ImMsgRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *ImMsgRequest) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ImMsgRequest) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ImMsgRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *ImMsgRequest) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *ImMsgRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImMsgRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type ImMsgResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId          string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	Sequence       int64  `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	ConversationId int64  `protobuf:"varint,3,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
}

func (x *ImMsgResponseData) Reset() {
	*x = ImMsgResponseData{}
	mi := &file_proto_MsgService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImMsgResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMsgResponseData) ProtoMessage() {}

func (x *ImMsgResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_MsgService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMsgResponseData.ProtoReflect.Descriptor instead.
func (*ImMsgResponseData) Descriptor() ([]byte, []int) {
	return file_proto_MsgService_proto_rawDescGZIP(), []int{1}
}

func (x *ImMsgResponseData) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *ImMsgResponseData) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ImMsgResponseData) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

// 单聊了消息发送反馈
type ImMsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Code int32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ImMsgResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ImMsgResponse) Reset() {
	*x = ImMsgResponse{}
	mi := &file_proto_MsgService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMsgResponse) ProtoMessage() {}

func (x *ImMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_MsgService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMsgResponse.ProtoReflect.Descriptor instead.
func (*ImMsgResponse) Descriptor() ([]byte, []int) {
	return file_proto_MsgService_proto_rawDescGZIP(), []int{2}
}

func (x *ImMsgResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImMsgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ImMsgResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ImMsgResponse) GetData() *ImMsgResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 单聊同步消息
type ImMsgSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话id
	ConversationId int64 `protobuf:"varint,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	// userId
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 客户端本地会话最大消息序号
	Sequence int64 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *ImMsgSyncRequest) Reset() {
	*x = ImMsgSyncRequest{}
	mi := &file_proto_MsgService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImMsgSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMsgSyncRequest) ProtoMessage() {}

func (x *ImMsgSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_MsgService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMsgSyncRequest.ProtoReflect.Descriptor instead.
func (*ImMsgSyncRequest) Descriptor() ([]byte, []int) {
	return file_proto_MsgService_proto_rawDescGZIP(), []int{3}
}

func (x *ImMsgSyncRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *ImMsgSyncRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ImMsgSyncRequest) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// 单聊同步消息返回
type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_proto_MsgService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_MsgService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_proto_MsgService_proto_rawDescGZIP(), []int{4}
}

func (x *SyncResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SyncResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SyncResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_proto_MsgService_proto protoreflect.FileDescriptor

var file_proto_MsgService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x79, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x49, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x11, 0x49, 0x6d, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0d, 0x49, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x6e, 0x0a, 0x10, 0x49, 0x6d, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x93, 0x01, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17,
	0x2e, 0x6d, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x79, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x2e, 0x6d, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x4d,
	0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6d, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_MsgService_proto_rawDescOnce sync.Once
	file_proto_MsgService_proto_rawDescData = file_proto_MsgService_proto_rawDesc
)

func file_proto_MsgService_proto_rawDescGZIP() []byte {
	file_proto_MsgService_proto_rawDescOnce.Do(func() {
		file_proto_MsgService_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_MsgService_proto_rawDescData)
	})
	return file_proto_MsgService_proto_rawDescData
}

var file_proto_MsgService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_MsgService_proto_goTypes = []any{
	(*ImMsgRequest)(nil),      // 0: myservice.ImMsgRequest
	(*ImMsgResponseData)(nil), // 1: myservice.ImMsgResponseData
	(*ImMsgResponse)(nil),     // 2: myservice.ImMsgResponse
	(*ImMsgSyncRequest)(nil),  // 3: myservice.ImMsgSyncRequest
	(*SyncResponse)(nil),      // 4: myservice.SyncResponse
}
var file_proto_MsgService_proto_depIdxs = []int32{
	1, // 0: myservice.ImMsgResponse.data:type_name -> myservice.ImMsgResponseData
	0, // 1: myservice.MsgService.SendMessage:input_type -> myservice.ImMsgRequest
	3, // 2: myservice.MsgService.SyncMessage:input_type -> myservice.ImMsgSyncRequest
	2, // 3: myservice.MsgService.SendMessage:output_type -> myservice.ImMsgResponse
	4, // 4: myservice.MsgService.SyncMessage:output_type -> myservice.SyncResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_MsgService_proto_init() }
func file_proto_MsgService_proto_init() {
	if File_proto_MsgService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_MsgService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_MsgService_proto_goTypes,
		DependencyIndexes: file_proto_MsgService_proto_depIdxs,
		MessageInfos:      file_proto_MsgService_proto_msgTypes,
	}.Build()
	File_proto_MsgService_proto = out.File
	file_proto_MsgService_proto_rawDesc = nil
	file_proto_MsgService_proto_goTypes = nil
	file_proto_MsgService_proto_depIdxs = nil
}
